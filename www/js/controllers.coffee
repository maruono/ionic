#ここにライブラリとして記述する
#start.rbに入れました

class Click_coffee
  constructor: (@object) ->
    alert @object
    alert "start.rbで実行してるんやで"
  story1: ->
    $(@object).click =>
      alert @object
      alert 123
###
aa = new TestCtrl ("#btn12")
aa.story1()
###   
# rakefileでやりました

######TestCtrlの中身######
# ここからTestCtrlの中身ですね
class TestCtrl
  constructor: ->
    #alert "okべいび"
    
  story1: ->
    alert "story1です"
  
  story2: ->
    ###
    document.addEventListener("deviceready", onDeviceReady, false)
    db = window.openDatabase("database", "1.0", "testdatabase", 1000000);
    ###
    name = 'localdb'
    version = '1.0'
    description = 'Web SQL Database'
    size = 2 * 1024 * 1024
    db = openDatabase(name, version, description, size)
    
    db.transaction (tx) ->
      tx.executeSql 'insert into user (id, name) values (?, ?)', [1, '金田']
  
  story3: ->



######################################
class Disp
  constructor: (@id) ->
  disp: (@str) ->
    document.getElementById(@id).innerHTML=@str

  add: (@str) ->
      newDiv = document.createElement("div")
      newDiv.innerHTML = @str
      my_div = document.getElementById("org_div1")
      document.getElementById(@id).insertBefore(newDiv, my_div)

  delete: ->
      document.getElementById(@id).innerHTML=""
  
  # ---
  # generated by js2coffee 2.2.0

#ここに本来controllers.coffeeである記述を行う

angular.module('starter.controllers', [])
.controller('DashCtrl', ($scope) ->)

.controller('TestCtrl', ($scope) ->
    strdisp = new Disp("str")
    
    num = localStorage.length
    for i in [0...num]
      strdisp.add(localStorage.getItem(i))
    
    $scope.save = () =>
      input_word = document.getElementById("inputdesu").value
      key = localStorage.length
      localStorage.setItem key, input_word
      
      strdisp.delete()
      num = localStorage.length
      for i in [0...num]
        strdisp.add(localStorage.getItem(i))
      
    $scope.read = () =>
      strdisp.delete()
      num = localStorage.length
      for i in [0...num]
        strdisp.add(localStorage.getItem(i))
      
      
)

.controller('ChatsCtrl', ($scope, Chats) ->
  # With the new view caching in Ionic, Controllers are only called
  # when they are recreated or on app start, instead of every page change.
  # To listen for when this page is active (for example, to refresh data),
  # listen for the $ionicView.enter event:
  #
  #$scope.$on('$ionicView.enter', function(e) {
  #});
  $scope.chats = Chats.all()

  $scope.remove = (chat) ->
    Chats.remove chat
    return

  return
)
.controller('ChatDetailCtrl', ($scope, $stateParams, Chats) ->
  $scope.chat = Chats.get($stateParams.chatId)
  return
)
.controller 'AccountCtrl', ($scope) ->
  $scope.settings = enableFriends: true
  return

# ---
# generated by js2coffee 2.2.0